<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">



<!--Controller的组件扫描-->
    <context:component-scan base-package="com.ly.controller"/>
<!--不用全扫，业务分开，只用扫controller就行-->

<!--下面的这一段与上面是一个作用-->
<!--    <context:component-scan base-package="com.ly">-->
<!--        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--&lt;!&ndash;代表只扫描com.ly包下的controller注解&ndash;&gt;-->
<!--&lt;!&ndash;        <context:exclude-filter type="annotation" expression="XXXX"/>&ndash;&gt;-->
<!--&lt;!&ndash;代表扫描com.ly.包下的除了xxxx的注解&ndash;&gt;-->
<!--    </context:component-scan>-->



<!--手动配置内部资源视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--/jsp/success2.jsp  变成了 只用写success2-->
        <property name="prefix" value="/jsp/"></property>
<!--上文指定前缀-->
        <property name="suffix" value=".jsp"></property>
<!--上文指定后缀-->
    </bean>
<!--copy reference-->

<!--配置处理器映射器-->
<!--用于com.ly.controller.userContoller2-->
<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
<!--    <property name="messageConverters">-->
<!--        <list>-->
<!--            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
<!--        </list>-->
<!--    </property>-->
<!--</bean>-->
<!--mvc注解驱动-->
<!--直接集成了json转换，替代上面的配置-->
<!--报错处理https://blog.csdn.net/darwinlong/article/details/77236813-->
    <mvc:annotation-driven  conversion-service="conversionService"/>

<!--    开放资源的访问-->
<!--    直接找到对应的静态资源返回就行-->
    <mvc:resources mapping="/js/**" location="/js/"/>

<!--    mapping代表映射地址，发请求后找js下的jquery，location代表是哪个目录下的资源对外开放-->
<!--    //spring-mvc整个架构前端控制器是dispatcherservlet-->
<!--web.xml配置前端控制器，其中dispatcherservlet的url为/，意味着将所有的都识别为requestmapping-->
<!--    所以js的会访问不到-->
<!--    上面的这句话代表在mvc框架中要开发对哪些资源的访问权限-->
<!--    直接找到对应的静态资源返回-->

    <mvc:default-servlet-handler></mvc:default-servlet-handler>
<!--    代表requestmapping找不到后交由原始的容器即tomcat找内部静态资源，可替代上面的<mvc:resources-->

<!--    声明转换器-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.ly.converter.DateConverter"></bean>
            </list>
        </property>
    </bean>

<!--    配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!--            上传文件总大小-->
        <property name="maxUploadSize" value="5242800"/>
<!--        上传单个文件的大小-->
        <property name="maxUploadSizePerFile" value="5242800"/>
<!--        上传文件的编码类型-->
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>


</beans>